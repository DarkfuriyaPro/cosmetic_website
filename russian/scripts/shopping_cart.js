// shopping_cart.js (–ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω–∏—Ç–µ –∏–º –≤–∞—à —Ñ–∞–π–ª)

// ======= –£–¢–ò–õ–ò–¢–´ =======
function qs(selector, ctx = document) { return ctx.querySelector(selector); }
function qsa(selector, ctx = document) { return Array.from((ctx || document).querySelectorAll(selector)); }

// ======= –ì–õ–û–ë–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï =======
let cartItems = []; // { id, title, price, img, quantity }

// ======= –ó–ê–ì–†–£–ó–ö–ê –ò –°–û–•–†–ê–ù–ï–ù–ò–ï =======
function loadCartFromStorage() {
  try {
    const saved = JSON.parse(localStorage.getItem('cart')) || [];
    if (!Array.isArray(saved)) {
      cartItems = [];
    } else {
      cartItems = saved;
    }
    console.log('loadCartFromStorage ->', cartItems);
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ cart –∏–∑ localStorage', e);
    cartItems = [];
  }
  renderCart();
}

function saveCartToStorage() {
  try {
    localStorage.setItem('cart', JSON.stringify(cartItems));
    console.log('saveCartToStorage ->', cartItems);
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ cart –≤ localStorage', e);
  }
}

// ======= –†–ï–ù–î–ï–† –ö–û–†–ó–ò–ù–´ (–ø–æ cartItems) =======
function renderCart() {
  const shoppingCart = document.getElementById('shoppingCart');
  const cartContainer = shoppingCart.querySelector('.cart-container');
  const emptyState = cartContainer.querySelector('.empty');
  const footer = cartContainer.querySelector('.cart-footer');

  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ .cart-item (–Ω–µ —Ç—Ä–æ–≥–∞–µ–º .empty –∏ .cart-footer)
  qsa('.cart-item', cartContainer).forEach(el => el.remove());

  if (cartItems.length === 0) {
    if (emptyState) emptyState.style.display = 'flex';
  } else {
    if (emptyState) emptyState.style.display = 'none';
    cartItems.forEach(item => {
      const cartItem = document.createElement('div');
      cartItem.classList.add('cart-item');
      if (item.id) cartItem.dataset.productId = String(item.id);

      cartItem.innerHTML = `
      <div class="cart-item-left">
        <div class="cart-item-img">
          <img src="${item.img || ''}" alt="–¢–æ–≤–∞—Ä">
        </div>
        <div class="cart-item-info">
          <div class="cart-item-title">${item.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</div>
          <div class="price_quantity">
            <div class="cart-item-price">
              <span class="price-value">${item.price}</span><span>‚Ç¨</span>
            </div>
            <div class="cart-item-quantity">
              <button class="quantity-btn decrease">‚àí</button>
              <span class="quantity-number">${item.quantity}</span>
              <button class="quantity-btn increase">+</button>
            </div>
          </div>
        </div>
      </div>
      <button class="cart-item-remove">
        <img src="/images/trash.png" alt="–£–¥–∞–ª–∏—Ç—å">
      </button>
      `;

      cartContainer.insertBefore(cartItem, footer);
    });
  }

  updateCartCount();
  updateTotalPrice();
}

// ======= –ü–û–ú–û–©–ù–ò–ö–ò –î–õ–Ø –ü–û–ò–°–ö–ê –¢–û–í–ê–†–ê =======
function findCartItemIndexByIdOrTitle(id, title) {
  if (id) {
    const idx = cartItems.findIndex(i => String(i.id) === String(id));
    if (idx !== -1) return idx;
  }
  // fallback to title match (–µ—Å–ª–∏ id –Ω–µ –∑–∞–¥–∞–Ω)
  return cartItems.findIndex(i => i.title && i.title.trim() === title.trim());
}

// ======= –î–û–ë–ê–í–ò–¢–¨ –¢–û–í–ê–† =======
function addProductToCart({ id, title, price, img, quantity = 1 }) {
  // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
  price = (price || '0').toString().replace(/[^\d.,]/g, '').replace(',', '.');
  const priceNum = parseFloat(price) || 0;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º ‚Äî –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω–µ
  const idx = findCartItemIndexByIdOrTitle(id, title);

  if (idx !== -1) {
    // üîπ –¢–æ–≤–∞—Ä —É–∂–µ –µ—Å—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º popup
    console.log('–¢–æ–≤–∞—Ä —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ:', cartItems[idx]);
    showAlreadyInCartPopup();
    return;
  }

  // üîπ –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
  const newItem = {
    id: id || null,
    title: title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
    price: priceNum,
    img: img || '',
    quantity: quantity || 1, // ‚úÖ –≤–æ—Ç –∑–¥–µ—Å—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å –∫–Ω–æ–ø–æ–∫ +/‚àí
  };

  cartItems.push(newItem);
  console.log('–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä:', newItem);

  saveCartToStorage();
  renderCart();
  showSnackbar('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É');
}



// ======= –£–î–ê–õ–ò–¢–¨ –¢–û–í–ê–† =======
function removeCartItemByElement(el) {
  const cartItem = el.closest('.cart-item');
  if (!cartItem) return;
  const productId = cartItem.dataset.productId;
  if (productId) {
    cartItems = cartItems.filter(i => String(i.id) !== String(productId));
  } else {
    const title = cartItem.querySelector('.cart-item-title')?.innerText?.trim();
    cartItems = cartItems.filter(i => i.title?.trim() !== title);
  }
  saveCartToStorage();
  renderCart();
}

// ======= –ü–û–õ–û–ñ–ò–¢–¨/–£–ë–ê–í–ò–¢–¨ –ö–û–õ–ò–ß–ï–°–¢–í–û =======
function changeQuantityByElement(el, delta) {
  const cartItem = el.closest('.cart-item');
  if (!cartItem) return;
  const productId = cartItem.dataset.productId;
  let idx = -1;
  if (productId) idx = cartItems.findIndex(i => String(i.id) === String(productId));
  else {
    const title = cartItem.querySelector('.cart-item-title')?.innerText?.trim();
    idx = cartItems.findIndex(i => i.title?.trim() === title);
  }
  if (idx === -1) return;
  cartItems[idx].quantity = Math.max(1, (cartItems[idx].quantity || 1) + delta);
  saveCartToStorage();
  renderCart();
}

// ======= –°–ß–ï–¢–ß–ò–ö–ò –ò –°–£–ú–ú–ê =======
function updateCartCount() {
  const uniqueCount = cartItems.length;
  const totalQty = cartItems.reduce((s, it) => s + (parseInt(it.quantity) || 0), 0);

  const cartCountEl = document.querySelector('.cart-count');
  if (cartCountEl) cartCountEl.innerText = uniqueCount;

  const itemsCounter = document.querySelector('.items-counter span');
  if (itemsCounter) itemsCounter.innerText = totalQty;
}

function updateTotalPrice() {
  const total = cartItems.reduce((sum, it) => {
    const price = parseFloat(String(it.price).replace(',', '.')) || 0;
    const qty = parseInt(it.quantity) || 0;
    return sum + price * qty;
  }, 0);
  const amountEl = document.querySelector('.amount-count');
  if (amountEl) {
    amountEl.innerText = (total % 1 === 0 ? Math.round(total) : total.toFixed(2)) + '‚Ç¨';
  }
}

// ======= SNACKBAR (–ø—Ä–æ—Å—Ç–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞) =======
function showSnackbar(text) {
  const sn = document.getElementById('snackbar');
  if (!sn) return;
  sn.innerText = text;
  sn.classList.add('show');
  setTimeout(() => sn.classList.remove('show'), 1800);
}

function showAlreadyInCartPopup() {
  const popup = document.getElementById('prove_product');
  if (!popup) return;
  popup.classList.add('show');
  setTimeout(() => popup.classList.remove('show'), 1800);
}


// ======= –û–ë–©–ò–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò (–î–ï–õ–ï–ì–ò–†–û–í–ê–ù–ò–ï) =======

document.addEventListener('click', function (e) {
  const target = e.target;

  // –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–í –∫–æ—Ä–∑–∏–Ω—É"
  const addBtn = target.closest('.add-to-cart, .add-product');
  if (addBtn) {
    const card = addBtn.closest('.card, .foot-product');
    if (!card) return;

    const productId = card.dataset.productId || card.getAttribute('data-product-id') || null;
    const titleEl = card.querySelector('.product-title, .foot-product-desc-title');
    const priceEl = card.querySelector('.product-price .price-value, .foot-product-desc-price .price-value');
    const imgEl = card.querySelector('.product-img img, .product-slides img.active');

    const title = titleEl ? titleEl.innerText.trim() : '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
    const price = priceEl ? priceEl.innerText.trim().replace(/[^\d.,]/g, '') : '0';
    const img = imgEl ? imgEl.src : '';

    addProductToCart({ id: productId, title, price, img });
    return;
  }

  // –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω–µ
  if (target.closest('.cart-item-remove')) {
    removeCartItemByElement(target);
    return;
  }

  // –ù–∞–∂–∞—Ç–∏–µ –ø–ª—é—Å/–º–∏–Ω—É—Å
  if (target.closest('.quantity-btn')) {
    if (target.classList.contains('increase')) {
      changeQuantityByElement(target, 1);
    } else if (target.classList.contains('decrease')) {
      changeQuantityByElement(target, -1);
    }
    return;
  }

  // –ö–ª–∏–∫ –ø–æ –∏–∫–æ–Ω–∫–µ –∫–æ—Ä–∑–∏–Ω—ã (–æ—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å)
  const cartIcon = target.closest('.openbtn.cart-icon, .cart-icon');
  if (cartIcon) {
    toggleCart();
    return;
  }
});

// ======= TOGGLE –ö–û–†–ó–ò–ù–´ =======
function toggleCart() {
  const cart = document.getElementById("shoppingCart");
  const main = document.getElementById("main");
  const isOpening = !cart.classList.contains("open");
  cart.classList.toggle("open");

  if (isOpening) {
    main.style.marginRight = "350px";
    // –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø—Ä–æ—Å—Ç–æ —Ä–µ–Ω–¥–µ—Ä–∏–º/–æ–±–Ω–æ–≤–ª—è–µ–º
    renderCart();
  } else {
    main.style.marginRight = "0";
    // –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—á–∏—â–∞–µ–º
  }
}

// ======= –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø =======
document.addEventListener('DOMContentLoaded', function () {
  loadCartFromStorage();

  // –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ "–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É", –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏–º –µ—ë, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º
  qsa('.go-to-cart-btn').forEach(btn => {
    btn.addEventListener('click', function (e) {
      e.preventDefault();
      saveCartToStorage();
      // –ø–µ—Ä–µ—Ö–æ–¥ —Å –Ω–µ–±–æ–ª—å—à–∏–º —Ç–∞–π–º–∞—É—Ç–æ–º (–∫–∞–∫ —É —Ç–µ–±—è –±—ã–ª–æ)
      const href = this.getAttribute('href') || '/russian/consumer_ru/main_cart.html';
      setTimeout(() => window.location.href = href, 100);
    });
  });
});



window.addProductToCart = addProductToCart;
window.findCartItemIndexByIdOrTitle = findCartItemIndexByIdOrTitle;
window.showAlreadyInCartPopup = showAlreadyInCartPopup;